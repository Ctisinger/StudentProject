import java.util.*;
import java.lang.Math; 


class Student{
   private final String name;
   private final String email;
   private final String major;
   private final String project;
   private final String otherProject;
   private final String time;
   private final String day;
   private final String language;
   private final String skill;
   private final String friend;

   public Student(final String name, final String email, final String major, final String project, final String otherProject, final String time, final String day, final String language, final String skill, final String friend){
     this.name = name;
     this.email = email;
     this.major = major;
     this.project = project;
     this.otherProject = otherProject;
     this.time = time;
     this.day = day;
     this.language = language;
     this.skill = skill;
     this.friend = friend;
   }
   //Getters
   public String getName(){
       return this.name;
   }
   public String getEmail(){
     return this.email;
   }
   public String getMajor(){
     return this.major;
   }
   public String getProject(){
     return this.project;
   }
   public String getOtherProject(){
     return this.otherProject;
   }
   public String getTime(){
     return this.time;
   }
   public String getDay(){
     return this.day;
   }
   public String getLanguage(){
     return this.language;
   }
   public String getSkill(){
     return this.skill;
   }
   public String getFriend(){
     return this.friend;
   }   
}
public class Main5 {
   public static void main(final String[] args){
       int number = 7;
       int group_num = (int)Math.ceil(number / 4.0);
       final Student[] students = new Student[number];
       students[0] = new Student("chase","Chase@gmail.com","information technology","database","none","both","both","java","coding","dawn");
       students[1] = new Student("john","john@gmail.com","cybersecurity","gaming","none","am","weekend","c++","leadership","timmy");
       students[2] = new Student("Charles","charles@gmail.com","other","database","none","pm","both","python","coding","rick");
       students[3] = new Student("larry","larry@gmail.com","computer science","whales","none","am","weekdays","java","hardware","kenny");
       students[4] = new Student("kat","kat@gmail.com","computer programming","medical","none","both","weekend","java","leadership","james");
       students[5] = new Student("andrea","andrea@gmail.com","information technology","whales","none","both","weekdays","python","hardware","adam");
       students[6] = new Student("dawn","dawn@gmail.com","other","vr","none","pm","both","c","teamwork","chase");
      //algorithm
       //creates an array of groups 
       List[] group = new List[group_num];
       //temp group list to be moved into finalized group list above ^
       List temp_group = new ArrayList<>();
       //scoreboard arraylist 
       ArrayList<Integer> scoreboard = new ArrayList<Integer>();
   
   
      // loops once for each group
      for(int i = 0; i < group_num ; i++){
         
         temp_group.clear();
         
         //adds first user to test group, this user will be compared to all others
         temp_group.add(students[0].getName());
         
         //clear scoreboard
         scoreboard.clear();
         
         //cycles through group skipping first person
         for(int k = 1; k < number ; k++){
         
            //initialize score counter
            int score = 0;
                  
            //checks if users put eachother as friends and adds them to group 
            if(students[0].getFriend() == (students[k].getName()) && students[0].getFriend() == (students[k].getName())){
                score = score + 1000;
            }
            //check if time of day and day of week match
            if ((students[0].getTime().equals(students[k].getTime()) || (students[0].getTime().equals("both")) || (students[k].getTime().equals("both"))) && ((students[0].getDay().equals(students[k].getDay())) || (students[0].getDay().equals("both")) || (students[k].getDay().equals("both")))){
               score = score + 100;
            } 
            //check if languages matches
            if (students[0].getLanguage().equals(students[k].getLanguage())){
               score = score + 100;   
            }
            //check if skills matches
            if (students[0].getSkill().equals(students[k].getSkill())){
               score = score + 100;
            }
            scoreboard.add(score);
         }
         System.out.println(scoreboard);
         int first = 0;
         int second = 0;
         int third = 0;
         int first_place = 0;
         int second_place = 0;
         int third_place = 0;
         for (int p = 0; p < scoreboard.size(); p++){
                
            if (first < scoreboard.get(p)){
               first = scoreboard.get(p);
               first_place = p+1;         
            }

            else if (second < scoreboard.get(p)){
               second = scoreboard.get(p);
               second_place = p+1;
            }

            else if (third < scoreboard.get(p)){
               third = scoreboard.get(p);
               third_place = p+1;
            }
        }
        temp_group.add(students[first_place].getName());
        //want to remove user from students
        //students.Remove(first_place);
        temp_group.add(students[second_place].getName());
        temp_group.add(students[third_place].getName());
        group[i] = temp_group;
        System.out.print(group[i]);


              
      }

   }
   }

        
